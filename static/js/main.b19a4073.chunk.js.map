{"version":3,"sources":["App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/TableItem/TableItem.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["handleActiveLink","isActive","classNames","App","className","role","to","HomePage","Loader","PersonLink","person","slug","useParams","sex","name","TableItem","people","born","died","motherName","fatherName","getParent","parentName","find","parent","mother","father","motherNameText","fatherNameText","PeopleTable","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loading","setLoading","hasError","setHasError","isTableShown","length","res","catch","finally","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b19a4073.chunk.js","sourcesContent":["import './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst handleActiveLink = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={handleActiveLink} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={handleActiveLink}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <Link\n      to={slug ? `../${person.slug}` : `${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const TableItem: React.FC<Props> = ({ person, people }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n  const getParent = (parentName: string | null) => {\n    return people.find(parent => parent.name === parentName);\n  };\n\n  const mother = getParent(motherName);\n  const father = getParent(fatherName);\n  const motherNameText = motherName || '-';\n  const fatherNameText = fatherName || '-';\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>\n        {sex}\n      </td>\n\n      <td>\n        {born}\n      </td>\n\n      <td>\n        {died}\n      </td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : motherNameText}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : fatherNameText}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { TableItem } from '../TableItem/TableItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <TableItem\n          key={person.name}\n          person={person}\n          people={people}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const isTableShown = !loading && !hasError && !!people.length;\n\n  getPeople()\n    .then(res => setPeople(res))\n    .catch(() => setHasError(true))\n    .finally(() => setLoading(false));\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !hasError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isTableShown && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}